apiVersion: v1
data:
  init.sql: |-
    USE `mysql`;

    DROP TABLE IF EXISTS
        `kubedb_table`;

    CREATE TABLE `kubedb_table`(
        `id` BIGINT(20) NOT NULL,
        `name` VARCHAR(255) DEFAULT NULL
    );

    --
    -- Dumping data for table `kubedb_table`
    --

    INSERT INTO `kubedb_table`(`id`, `name`)
    VALUES(1, 'name1'),(2, 'name2'),(3, 'name3');

    --
    -- Indexes for table `kubedb_table`
    --

    ALTER TABLE
        `kubedb_table` ADD PRIMARY KEY(`id`);

    --
    -- AUTO_INCREMENT for table `kubedb_table`
    --

    ALTER TABLE
        `kubedb_table` MODIFY `id` BIGINT(20) NOT NULL AUTO_INCREMENT,
        AUTO_INCREMENT = 4;
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: mysql
    app.kubernetes.io/name: mysqls.kubedb.com
  name: mysql-init-script
  namespace: demo
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-auth
  namespace: demo
stringData:
  password: thisIs1StrongPassword
  username: root
type: Opaque
---
apiVersion: kubedb.com/v1alpha2
kind: MySQL
metadata:
  name: mysql
  namespace: demo
spec:
  authSecret:
    name: mysql-auth
  init:
    script:
      configMap:
        name: mysql-init-script
  podTemplate:
    spec:
      args:
      - --character-set-server=utf8mb4
      env:
      - name: MYSQL_DATABASE
        value: myDB
      resources:
        requests:
          cpu: 250m
          memory: 1Gi
  storage:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
    storageClassName: standard
  storageType: Durable
  terminationPolicy: Halt
  version: 8.0.23-v1
---
apiVersion: stash.appscode.com/v1alpha1
kind: Repository
metadata:
  labels:
    app.kubernetes.io/instance: mysql
    app.kubernetes.io/name: mysqls.kubedb.com
  name: mysql-repo
  namespace: demo
spec:
  backend:
    gcs:
      bucket: stash-testing
      prefix: /demo/mysql/mysql
    storageSecretName: gcs-secret
---
apiVersion: stash.appscode.com/v1beta1
kind: BackupConfiguration
metadata:
  labels:
    app.kubernetes.io/instance: mysql
    app.kubernetes.io/name: mysqls.kubedb.com
  name: mysql
  namespace: demo
spec:
  repository:
    name: mysql-repo
  retentionPolicy:
    keepLast: 5
    name: keep-last-5
    prune: true
  schedule: '*/5 * * * *'
  target:
    ref:
      apiVersion: appcatalog.appscode.com/v1alpha1
      kind: AppBinding
      name: mysql
