apiVersion: v1
kind: Secret
metadata:
  name: mysql-auth
  namespace: demo
stringData:
  password: thisIs1StrongPassword
  username: root
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-config
  namespace: demo
stringData:
  my-config.cnf: |
    [mysqld]
    max_connections = 200
    read_buffer_size = 1048576
type: Opaque
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: mysql-ca
  namespace: demo
spec:
  ca:
    secretName: mysql-ca
---
apiVersion: kubedb.com/v1alpha2
kind: MySQL
metadata:
  name: mysql
  namespace: demo
spec:
  authSecret:
    name: mysql-auth
  configSecret:
    name: mysql-config
  monitor:
    agent: prometheus.io
    prometheus:
      exporter:
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
  podTemplate:
    spec:
      args:
      - --character-set-server=utf8mb4
      env:
      - name: MYSQL_DATABASE
        value: myDB
      resources:
        requests:
          cpu: 250m
          memory: 1Gi
  replicas: 3
  requireSSL: true
  storage:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
    storageClassName: standard
  storageType: Durable
  terminationPolicy: Halt
  tls:
    certificates:
    - alias: server
      dnsNames:
      - localhost
      ipAddresses:
      - 127.0.0.1
      subject:
        organizations:
        - kubedb:server
    issuerRef:
      apiGroup: cert-manager.io
      kind: Issuer
      name: mysql-ca
  topology:
    group:
      name: dc002fc3-c412-4d18-b1d4-66c1fbfbbc9b
    mode: GroupReplication
  version: 8.0.23-v1
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/instance: mysql
    app.kubernetes.io/name: mysqls.kubedb.com
    release: prometheus-stack
  name: mysql
  namespace: demo
spec:
  endpoints:
  - honorLabels: true
    interval: 30s
    path: /metrics
    port: metrics
  namespaceSelector:
    matchNames:
    - demo
  selector:
    matchLabels:
      app.kubernetes.io/instance: mysql
      app.kubernetes.io/name: mysqls.kubedb.com
---
apiVersion: stash.appscode.com/v1alpha1
kind: Repository
metadata:
  labels:
    app.kubernetes.io/instance: mysql
    app.kubernetes.io/name: mysqls.kubedb.com
  name: mysql-init-repo
  namespace: demo
spec:
  backend:
    gcs:
      bucket: stash-testing
      prefix: /demo/mysql/mysql
    storageSecretName: gcs-secret
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-init-repo-cred
  namespace: demo
stringData:
  password: thisIs1StrongPassword
  username: root
type: Opaque
---
apiVersion: stash.appscode.com/v1alpha1
kind: Repository
metadata:
  labels:
    app.kubernetes.io/instance: mysql
    app.kubernetes.io/name: mysqls.kubedb.com
  name: mysql-repo
  namespace: demo
spec:
  backend:
    gcs:
      bucket: stash-testing
      prefix: /demo/mysql/mysql
    storageSecretName: gcs-secret
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-repo-cred
  namespace: demo
stringData:
  password: thisIs1StrongPassword
  username: root
type: Opaque
---
apiVersion: stash.appscode.com/v1beta1
kind: BackupConfiguration
metadata:
  labels:
    app.kubernetes.io/instance: mysql
    app.kubernetes.io/name: mysqls.kubedb.com
  name: mysql
  namespace: demo
spec:
  repository:
    name: mysql-repo
  retentionPolicy:
    keepLast: 5
    name: keep-last-5
    prune: true
  schedule: '*/5 * * * *'
  target:
    ref:
      apiVersion: appcatalog.appscode.com/v1alpha1
      kind: AppBinding
      name: mysql
---
apiVersion: stash.appscode.com/v1beta1
kind: RestoreSession
metadata:
  labels:
    app.kubernetes.io/instance: mysql
    app.kubernetes.io/name: mysqls.kubedb.com
  name: mysql-init
  namespace: demo
spec:
  repository:
    name: mysql-init-repo
  rules:
  - snapshots:
    - latest
  target:
    ref:
      apiVersion: appcatalog.appscode.com/v1alpha1
      kind: AppBinding
      name: mysql
  task:
    name: mysql-restore-8.0.21
---
apiVersion: storage.kubestash.com/v1alpha1
kind: BackupStorage
metadata:
  name: mysql-storage
  namespace: demo
spec:
  storage:
    provider: gcs
    gcs:
      bucket: kubedb-testing
      prefix: /mysql
      secret: mysql-storage-cred
  deletionPolicy: Delete
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-storage-cred
  namespace: demo
stringData:
  password: ""
  username: ""
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-encryption-secret
  namespace: demo
stringData:
  key: ""
---
apiVersion: core.kubestash.com/v1alpha1
kind: BackupConfiguration
metadata:
  name: mysql
  namespace: demo
spec:
  target:
    apiGroup: kubedb.com
    kind: MySQL
    name: mysql
    namespace: demo
  backends:
    - name: mysql-backend
      storageRef:
        name: mysql-storage
        namespace: demo
      retentionPolicy:
        name: mysql-retention-policy
        namespace: demo
  sessions:
    - name: mysql-frequent-backup
      sessionHistoryLimit: 2
      scheduler:
        schedule: "*/5 * * * *"
        jobTemplate:
          backoffLimit: 1
      repositories:
        - name: mysql-repo
          backend: mysql-backend
          directory: /mysql-repo
          encryptionSecret:
            name: mysql-encryption-secret
            namespace: demo
      addon:
        name: mysql-addon
        tasks:
          - name: LogicalBackup
        jobTemplate:
          spec:
            securityContext:
              runAsUser: 0
              runAsGroup: 0
---
apiVersion: storage.kubestash.com/v1alpha1
kind: RetentionPolicy
metadata:
  name: mysql-retention-policy
  namespace: demo
spec:
  maxRetentionPeriod: 2mo
  successfulSnapshots:
    last: 5
  failedSnapshots:
    last: 2
---
apiVersion: core.kubestash.com/v1alpha1
kind: RestoreSession
metadata:
  name: mysql
  namespace: demo
spec:
  target:
    apiGroup: kubedb.com
    kind: MySQL
    name: mysql
    namespace: demo
  dataSource:
    snapshot: latest
    repository: mysql-repo
    encryptionSecret:
      name: mysql-encryption-secret
      namespace: demo
  addon:
    name: mysql-addon
    tasks:
      - name: LogicalBackupRestore
    jobTemplate:
      spec:
        securityContext:
          runAsUser: 0
          runAsGroup: 0
