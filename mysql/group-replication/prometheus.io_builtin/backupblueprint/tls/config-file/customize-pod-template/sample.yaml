apiVersion: v1
kind: Secret
metadata:
  name: mysql-config
  namespace: demo
stringData:
  my-config.cnf: |
    [mysqld]
    max_connections = 200
    read_buffer_size = 1048576
type: Opaque
---
apiVersion: cert-manager.io/v1beta1
kind: Issuer
metadata:
  name: mysql-ca
  namespace: demo
spec:
  ca:
    secretName: mysql-ca
---
apiVersion: kubedb.com/v1alpha2
kind: MySQL
metadata:
  annotations:
    stash.appscode.com/backup-blueprint: mysql-backupblueprint
    stash.appscode.com/schedule: '*/7 * * * *'
  name: mysql
  namespace: demo
spec:
  configSecret:
    name: mysql-config
  monitor:
    agent: prometheus.io/builtin
    prometheus:
      exporter:
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
  podTemplate:
    spec:
      args:
      - --character-set-server=utf8mb4
      env:
      - name: MYSQL_DATABASE
        value: myDB
      resources:
        requests:
          cpu: 250m
          memory: 1Gi
  replicas: 1
  requireSSL: true
  storage:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
    storageClassName: standard
  storageType: Durable
  terminationPolicy: Halt
  tls:
    certificates:
    - alias: server
      dnsNames:
      - localhost
      ipAddresses:
      - 127.0.0.1
      subject:
        organizations:
        - kubedb:server
    issuerRef:
      apiGroup: cert-manager.io
      kind: Issuer
      name: mysql-ca
  topology:
    group:
      name: dc002fc3-c412-4d18-b1d4-66c1fbfbbc9b
    mode: GroupReplication
  version: 8.0.23-v1
---
apiVersion: stash.appscode.com/v1beta1
kind: BackupBlueprint
metadata:
  name: mysql-backupblueprint
spec:
  backend:
    gcs:
      bucket: stash-testing
      prefix: mysql-backup/${TARGET_NAMESPACE}/${TARGET_APP_RESOURCE}/${TARGET_NAME}
    storageSecretName: gcs-secret
  retentionPolicy:
    keepLast: 5
    name: keep-last-5
    prune: true
  schedule: '*/5 * * * *'
