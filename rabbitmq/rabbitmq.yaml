apiVersion: v1
kind: Secret
metadata:
  name: rabbitmq-auth
  namespace: demo
stringData:
  password: thisIs1StrongPassword
  username: root
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: rabbitmq-config
  namespace: demo
stringData:
  rabbitmq.cnf: |
    [mysqld]
    max_connections = 200
    read_buffer_size = 1048576
type: Opaque
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: rabbitmq-ca
  namespace: demo
spec:
  ca:
    secretName: rabbitmq-ca
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/instance: rabbitmq
    app.kubernetes.io/name: rabbitmqs.kubedb.com
    release: prometheus-stack
  name: rabbitmq
  namespace: demo
spec:
  endpoints:
  - honorLabels: true
    interval: 30s
    path: /metrics
    port: metrics
  namespaceSelector:
    matchNames:
    - demo
  selector:
    matchLabels:
      app.kubernetes.io/instance: rabbitmq
      app.kubernetes.io/name: rabbitmqs.kubedb.com
---
apiVersion: kubedb.com/v1alpha2
kind: RabbitMQ
metadata:
  name: rabbitmq
  namespace: sdb
spec:
  version: "8.1.32"
  licenseSecret:
    name: license-secret
  storageType: Durable
  topology:
    aggregator:
      podTemplate:
        spec:
          nodeSelector:
            app: kubedb
            instance: sdb
            component: sdb-database
          tolerations:
            - effect: NoSchedule
              key: app
              operator: Equal
              value: kubedb
            - effect: NoSchedule
              key: instance
              operator: Equal
              value: sdb
            - effect: NoSchedule
              key: component
              operator: Equal
              value: sdb-database
            - effect: NoSchedule
              key: nodepool_type
              operator: Equal
              value: n2-standard-2
          containers:
            - name: rabbitmq
              resources:
                requests:
                  "cpu": 600m
                  "memory": "1200Mi"
      replicas: 3
      storage:
        storageClassName: "standard-rwo"
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
    leaf:
      podTemplate:
        spec:
          containers:
            - name: rabbitmq
              resources:
                requests:
                  "cpu": 700m
                  "memory": "1400Mi"
      replicas: 2
      storage:
        storageClassName: "standard-rwo"
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
  deletionPolicy: Halt
  serviceTemplates:
    - alias: primary
      spec:
        type: LoadBalancer
---
apiVersion: gitops.kubedb.com/v1alpha1
kind: RabbitMQ
metadata:
  name: rabbitmq
  namespace: sdb
spec:
  version: "8.1.32"
  licenseSecret:
    name: license-secret
  storageType: Durable
  topology:
    aggregator:
      podTemplate:
        spec:
          nodeSelector:
            app: kubedb
            instance: sdb
            component: sdb-database
          tolerations:
            - effect: NoSchedule
              key: app
              operator: Equal
              value: kubedb
            - effect: NoSchedule
              key: instance
              operator: Equal
              value: sdb
            - effect: NoSchedule
              key: component
              operator: Equal
              value: sdb-database
            - effect: NoSchedule
              key: nodepool_type
              operator: Equal
              value: n2-standard-2
          containers:
            - name: rabbitmq
              resources:
                requests:
                  "cpu": 600m
                  "memory": "1200Mi"
      replicas: 3
      storage:
        storageClassName: "standard-rwo"
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
    leaf:
      podTemplate:
        spec:
          containers:
            - name: rabbitmq
              resources:
                requests:
                  "cpu": 700m
                  "memory": "1400Mi"
      replicas: 2
      storage:
        storageClassName: "standard-rwo"
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
  deletionPolicy: Halt
  serviceTemplates:
    - alias: primary
      spec:
        type: LoadBalancer
---
apiVersion: autoscaling.kubedb.com/v1alpha1
kind: RabbitMQAutoscaler
metadata:
  name: rabbitmq
  namespace: demo
spec:
  databaseRef:
    name: repl
  opsRequestOptions:
    timeout: 10m
    apply: IfReady
  compute:
    node:
      trigger: "On"
      podLifeTimeThreshold: 10m
      resourceDiffPercentage: 20
      minAllowed:
        cpu: 400m
        memory: 400Mi
      maxAllowed:
        cpu: 1
        memory: 2Gi
    nodeTopology:
      name: standard-basv2-family
---
apiVersion: catalog.appscode.com/v1alpha1
kind: RabbitMQBinding
metadata:
  name: rabbitmq
  namespace: demo
spec:
  sourceRef:
    name: rabbitmq
    namespace: demo
