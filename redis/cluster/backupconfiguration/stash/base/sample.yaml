apiVersion: kubedb.com/v1alpha2
kind: Redis
metadata:
  name: redis
  namespace: demo
spec:
  cluster:
    master: 3
    replicas: 1
  init:
    waitForInitialRestore: true
  mode: Cluster
  storage:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
    storageClassName: standard
  storageType: Durable
  terminationPolicy: WipeOut
  version: 6.0.6
---
apiVersion: stash.appscode.com/v1alpha1
kind: Repository
metadata:
  labels:
    app.kubernetes.io/instance: redis
    app.kubernetes.io/name: redises.kubedb.com
  name: redis-init-repo
  namespace: demo
spec:
  backend:
    gcs:
      bucket: stash-testing
      prefix: /demo/redis
    storageSecretName: gcs-secret
---
apiVersion: stash.appscode.com/v1alpha1
kind: Repository
metadata:
  labels:
    app.kubernetes.io/instance: redis
    app.kubernetes.io/name: redises.kubedb.com
  name: redis-repo
  namespace: demo
spec:
  backend:
    gcs:
      bucket: stash-testing
      prefix: /demo/redis
    storageSecretName: gcs-secret
---
apiVersion: stash.appscode.com/v1beta1
kind: BackupConfiguration
metadata:
  labels:
    app.kubernetes.io/instance: redis
    app.kubernetes.io/name: redises.kubedb.com
  name: redis
  namespace: demo
spec:
  repository:
    name: redis-repo
  retentionPolicy:
    keepLast: 5
    name: keep-last-5
    prune: true
  schedule: '*/2 * * * *'
  target:
    ref:
      apiVersion: appcatalog.appscode.com/v1alpha1
      kind: AppBinding
      name: redis
---
apiVersion: stash.appscode.com/v1beta1
kind: RestoreSession
metadata:
  labels:
    app.kubernetes.io/instance: redis
    app.kubernetes.io/name: redises.kubedb.com
  name: redis-init
  namespace: demo
spec:
  repository:
    name: redis-init-repo
  rules:
  - snapshots:
    - latest
  target:
    ref:
      apiVersion: appcatalog.appscode.com/v1alpha1
      kind: AppBinding
      name: redis
