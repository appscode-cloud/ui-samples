apiVersion: v1
kind: Secret
metadata:
  name: mongodb-auth
  namespace: demo
stringData:
  password: thisIs1StrongPassword
  username: root
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-configserver-config
  namespace: demo
stringData:
  mongod.conf: |
    net:
      maxIncomingConnections: 20000
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/name: mongodbs.kubedb.com
  name: mongodb-init-script
  namespace: demo
stringData:
  mongo-initializer.js: |
    // create user for "testDB"
    db.createUser({
      user: 'root',
      pwd: 'changeit',
      roles: [
          {
              role: 'readWrite',
              db: 'testDB',
          },
      ],
    });
    db = new Mongo().getDB("testDB");

    // create sample collection in the "testDB"
    db.createCollection('users', { capped: false });
    db.createCollection('test', { capped: false });

    // insert some sample data into the "testDB"
    db.test.insert([
      { "item": 1 },
      { "item": 2 },
      { "item": 3 },
      { "item": 4 },
      { "item": 5 }
    ]);
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-mongos-config
  namespace: demo
stringData:
  mongod.conf: |
    net:
      maxIncomingConnections: 30000
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-shard-config
  namespace: demo
stringData:
  mongod.conf: |
    net:
      maxIncomingConnections: 40000
type: Opaque
---
apiVersion: app.k8s.io/v1beta1
kind: Application
metadata:
  annotations:
    meta.helm.sh/chart-name: mongodb
    meta.helm.sh/chart-url: https://bundles.byte.builders/ui/
    meta.helm.sh/chart-version: v0.1.0
  labels:
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mongodb-options
  name: mongodb
  namespace: demo
spec:
  assemblyPhase: Ready
  componentKinds:
  - group: app.k8s.io
    kind: Application
  - group: kubedb.com
    kind: MongoDB
  - group: ""
    kind: Secret
  - group: cert-manager.io
    kind: Issuer
  - group: monitoring.coreos.com
    kind: ServiceMonitor
  - group: stash.appscode.com
    kind: Repository
  - group: stash.appscode.com
    kind: BackupConfiguration
  - group: stash.appscode.com
    kind: RestoreSession
  descriptor:
    description: MongoDB Editor UI Options
    icons:
    - src: https://cdn.appscode.com/images/products/kubedb/kubedb-community-icon.png
      type: image/png
    links:
    - description: website
      url: https://byte.builders
    maintainers:
    - email: support@appscode.com
      name: appscode
    type: mongodbs.kubedb.com
  selector:
    matchLabels:
      app.kubernetes.io/instance: mongodb
      app.kubernetes.io/name: mongodbs.kubedb.com
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: mongodb
  namespace: demo
spec:
  ca:
    secretName: mongodb-ca
---
apiVersion: kubedb.com/v1alpha2
kind: MongoDB
metadata:
  name: mongodb
  namespace: demo
spec:
  authSecret:
    name: mongodb-auth
  init:
    script:
      secret:
        secretName: mongodb-init-script
  monitor:
    agent: prometheus.io/operator
    prometheus:
      exporter:
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
      serviceMonitor:
        interval: 30s
        labels:
          release: prometheus-stack
  shardTopology:
    configServer:
      configSecret:
        name: mongodb-configserver-config
      replicas: 3
      storage:
        resources:
          requests:
            storage: 1Gi
        storageClassName: standard
    mongos:
      configSecret:
        name: mongodb-mongos-config
      replicas: 2
    shard:
      configSecret:
        name: mongodb-shard-config
      replicas: 3
      shards: 2
      storage:
        resources:
          requests:
            storage: 1Gi
        storageClassName: standard
  sslMode: requireSSL
  storageType: Durable
  terminationPolicy: WipeOut
  tls:
    issuerRef:
      apiGroup: cert-manager.io
      kind: Issuer
      name: mongo-ca
  version: 4.2.3
