apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-admin-cred
  namespace: demo
stringData:
  password: WeakPassword
  username: kibanaserver
type: kubernetes.io/basic-auth
---
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-elastic-cred
  namespace: demo
stringData:
  password: thisIs1StrongPassword
  username: elastic
type: kubernetes.io/basic-auth
---
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-user-config
  namespace: demo
stringData:
  elasticsearch.yml: 'node.processors: 2'
---
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-secure-config
  namespace: demo
stringData:
  elasticsearch.yml: 'node.processors: 2'
---
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-kibanaro-cred
  namespace: demo
stringData:
  password: WeakPassword
  username: kibanaserver
type: kubernetes.io/basic-auth
---
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-kibanaserver-cred
  namespace: demo
stringData:
  password: WeakPassword
  username: kibanaserver
type: kubernetes.io/basic-auth
---
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-logstash-cred
  namespace: demo
stringData:
  password: WeakPassword
  username: kibanaserver
type: kubernetes.io/basic-auth
---
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-readall-cred
  namespace: demo
stringData:
  password: WeakPassword
  username: kibanaserver
type: kubernetes.io/basic-auth
---
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-snapshotrestore-cred
  namespace: demo
stringData:
  password: WeakPassword
  username: kibanaserver
type: kubernetes.io/basic-auth
---
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-metrics-exporter-cred
  namespace: demo
stringData:
  password: WeakPassword
  username: kibanaserver
type: kubernetes.io/basic-auth
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: elasticsearch-ca
  namespace: demo
spec:
  selfSigned: {}
---
apiVersion: kubedb.com/v1
kind: Elasticsearch
metadata:
  name: elasticsearch
  namespace: demo
spec:
  authSecret:
    name: elasticsearch-admin-cred
  configSecret:
    name: elasticsearch-user-config
  enableSSL: true
  init:
    waitForInitialRestore: true
  internalUsers:
    admin:
      backendRoles:
      - admin
      reserved: true
      secretName: elasticsearch-admin-cred
    kibanaro:
      secretName: elasticsearch-kibanaro-cred
    kibanaserver:
      reserved: true
      secretName: elasticsearch-kibanaserver-cred
    logstash:
      secretName: elasticsearch-logstash-cred
    readall:
      secretName: elasticsearch-readall-cred
    snapshotrestore:
      secretName: elasticsearch-snapshotrestore-cred
  kernelSettings:
    privileged: true
    sysctls:
    - name: vm.max_map_count
      value: "262144"
  monitor:
    agent: prometheus.io
    prometheus:
      exporter:
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
  storageType: Durable
  tls:
    issuerRef:
      apiGroup: cert-manager.io
      kind: Issuer
      name: elasticsearch-ca
  topology:
    data:
      replicas: 1
      storage:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: linode-block-storage
    dataCold:
      replicas: 1
      storage:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: linode-block-storage
    dataContent:
      replicas: 1
      storage:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: linode-block-storage
    dataFrozen:
      replicas: 1
      storage:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: linode-block-storage
    dataHot:
      replicas: 1
      storage:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: linode-block-storage
    dataWarm:
      replicas: 1
      storage:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: linode-block-storage
    ingest:
      replicas: 2
      storage:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: linode-block-storage
    master:
      replicas: 3
      storage:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: linode-block-storage
    ml:
      replicas: 1
      storage:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: linode-block-storage
    transform:
      replicas: 1
      storage:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: linode-block-storage
  version: searchguard-7.10.2
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/instance: elasticsearch
    app.kubernetes.io/name: elasticsearches.kubedb.com
    release: prometheus-stack
  name: elasticsearch
  namespace: demo
spec:
  endpoints:
  - honorLabels: true
    interval: 30s
    path: /metrics
    port: metrics
  namespaceSelector:
    matchNames:
    - demo
  selector:
    matchLabels:
      app.kubernetes.io/instance: elasticsearch
      app.kubernetes.io/name: elasticsearches.kubedb.com
---
apiVersion: stash.appscode.com/v1alpha1
kind: Repository
metadata:
  name: elasticsearch-init-repo
  namespace: demo
spec:
  backend:
    gcs:
      bucket: kubedb-testing
      prefix: /elasticsearch
    storageSecretName: elasticsearch-init-repo-cred
---
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-init-repo-cred
  namespace: demo
stringData:
  password: ""
  username: ""
---
apiVersion: stash.appscode.com/v1alpha1
kind: Repository
metadata:
  name: elasticsearch-repo
  namespace: demo
spec:
  backend:
    gcs:
      bucket: kubedb-testing
      prefix: /elasticsearch
    storageSecretName: elasticsearch-repo-cred
---
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-repo-cred
  namespace: demo
stringData:
  password: ""
  username: ""
---
apiVersion: stash.appscode.com/v1beta1
kind: BackupConfiguration
metadata:
  name: elasticsearch
  namespace: demo
spec:
  interimVolumeTemplate:
    metadata:
      name: elasticsearch-backup-tmp-storage
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: linode-block-storage
  repository:
    name: elasticsearch-repo
  retentionPolicy:
    keepLast: 5
    name: keep-last-5
    prune: true
  runtimeSettings:
    container:
      securityContext:
        runAsGroup: 0
        runAsUser: 0
  schedule: '*/5 * * * *'
  target:
    ref:
      apiVersion: appcatalog.appscode.com/v1alpha1
      kind: AppBinding
      name: elasticsearch
  task:
    name: elasticsearch-backup-7.3.2
---
apiVersion: stash.appscode.com/v1beta1
kind: RestoreSession
metadata:
  labels:
    app.kubernetes.io/name: elasticsearches.kubedb.com
  name: elasticsearch-init
  namespace: demo
spec:
  interimVolumeTemplate:
    metadata:
      name: elasticsearch-init-tmp-storage
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: linode-block-storage
  repository:
    name: elasticsearch-init-repo
  rules:
  - snapshots:
    - latest
  runtimeSettings:
    container:
      securityContext:
        runAsGroup: 0
        runAsUser: 0
  target:
    ref:
      apiVersion: appcatalog.appscode.com/v1alpha1
      kind: AppBinding
      name: elasticsearch
---
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-encryption-secret
  namespace: demo
stringData:
  RESTIC_PASSWORD: ""
---
apiVersion: core.kubestash.com/v1alpha1
kind: BackupConfiguration
metadata:
  name: elasticsearch
  namespace: demo
spec:
  target:
    apiGroup: kubedb.com
    kind: Elasticsearch
    name: elasticsearch
    namespace: demo
  backends:
    - name: elasticsearch-backend
      storageRef:
        name: elasticsearch-storage
        namespace: demo
      retentionPolicy:
        name: elasticsearch-retention-policy
        namespace: demo
  sessions:
    - name: elasticsearch-frequent-backup
      scheduler:
        failedJobsHistoryLimit: 4
        jobTemplate:
          backoffLimit: 2
          template:
            spec:
              containerSecurityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                  - ALL
                runAsGroup: 0
                runAsNonRoot: true
                runAsUser: 1000
                seccompProfile:
                  type: RuntimeDefault
              nodeSelector:
                kubernetes.io/os: linux
        schedule: 0 */2 * * *
        successfulJobsHistoryLimit: 2
      sessionHistoryLimit: 3
      repositories:
        - name: elasticsearch-repo
          backend: elasticsearch-backend
          directory: /es-repo
          encryptionSecret:
            name: elasticsearch-encryption-secret
            namespace: demo
      addon:
        name: elasticsearch-addon
        tasks:
          - name: logical-backup
        jobTemplate:
          spec:
            containerSecurityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              runAsGroup: 0
              runAsNonRoot: true
              runAsUser: 1000
              seccompProfile:
                type: RuntimeDefault
            nodeSelector:
              kubernetes.io/os: linux
---
apiVersion: core.kubestash.com/v1alpha1
kind: BackupBlueprint
metadata:
  name: elasticsearch
  namespace: demo
spec:
  usagePolicy:
    allowedNamespaces:
      from: Same
  backupConfigurationTemplate:
    backends:
      - name: elasticsearch-backend
        storageRef:
          name: elasticsearch-storage
          namespace: demo
        retentionPolicy:
          name: elasticsearch-retention-policy
          namespace: demo
    sessions:
      - name: elasticsearch-frequent-backup
        scheduler:
          failedJobsHistoryLimit: 4
          jobTemplate:
            backoffLimit: 2
            template:
              spec:
                containerSecurityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
                  runAsGroup: 0
                  runAsNonRoot: true
                  runAsUser: 1000
                  seccompProfile:
                    type: RuntimeDefault
                nodeSelector:
                  kubernetes.io/os: linux
          schedule: 0 */2 * * *
          successfulJobsHistoryLimit: 2
        sessionHistoryLimit: 3
        repositories:
          - name: elasticsearch-repo
            backend: elasticsearch-backend
            directory: /es-repo
            encryptionSecret:
              name: elasticsearch-encryption-secret
              namespace: demo
        addon:
          name: elasticsearch-addon
          tasks:
            - name: logical-backup
          jobTemplate:
            spec:
              containerSecurityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                  - ALL
                runAsGroup: 0
                runAsNonRoot: true
                runAsUser: 1000
                seccompProfile:
                  type: RuntimeDefault
              nodeSelector:
                kubernetes.io/os: linux
---
apiVersion: core.kubestash.com/v1alpha1
kind: RestoreSession
metadata:
  name: elasticsearch
  namespace: demo
spec:
  target:
    apiGroup: kubedb.com
    kind: Elasticsearch
    name: elasticsearch
    namespace: demo
  dataSource:
    snapshot: latest
    repository: elasticsearch-repo
    encryptionSecret:
      name: elasticsearch-encryption-secret
      namespace: demo
  addon:
    name: elasticsearch-addon
    tasks:
      - name: logical-backup-restore
    jobTemplate:
      spec:
        nodeSelector:
          kubernetes.io/os: linux
        securityContext:
          runAsUser: 1000
          runAsGroup: 0
    containerRuntimeSettings:
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        runAsGroup: 0
        runAsNonRoot: true
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
---
apiVersion: autoscaling.kubedb.com/v1alpha1
kind: ElasticsearchAutoscaler
metadata:
  name: elasticsearch
  namespace: demo
spec:
  databaseRef:
    name: repl
  opsRequestOptions:
    timeout: 10m
    apply: IfReady
  compute:
    node:
      trigger: "On"
      podLifeTimeThreshold: 10m
      resourceDiffPercentage: 20
      minAllowed:
        cpu: 400m
        memory: 400Mi
      maxAllowed:
        cpu: 1
        memory: 2Gi
    nodeTopology:
      name: standard-basv2-family
---
apiVersion: catalog.appscode.com/v1alpha1
kind: ElasticsearchBinding
metadata:
  name: elasticsearch
  namespace: demo
spec:
  sourceRef:
    name: elasticsearch
    namespace: demo
