apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-admin-cred
  namespace: demo
stringData:
  password: WeakPassword
  username: kibanaserver
type: kubernetes.io/basic-auth
---
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-auth
  namespace: demo
stringData:
  password: thisIs1StrongPassword
  username: elastic
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-kibanaro-cred
  namespace: demo
stringData:
  password: WeakPassword
  username: kibanaserver
type: kubernetes.io/basic-auth
---
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-kibanaserver-cred
  namespace: demo
stringData:
  password: WeakPassword
  username: kibanaserver
type: kubernetes.io/basic-auth
---
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-logstash-cred
  namespace: demo
stringData:
  password: WeakPassword
  username: kibanaserver
type: kubernetes.io/basic-auth
---
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-readall-cred
  namespace: demo
stringData:
  password: WeakPassword
  username: kibanaserver
type: kubernetes.io/basic-auth
---
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-snapshotrestore-cred
  namespace: demo
stringData:
  password: WeakPassword
  username: kibanaserver
type: kubernetes.io/basic-auth
---
apiVersion: kubedb.com/v1alpha2
kind: Elasticsearch
metadata:
  annotations:
    stash.appscode.com/backup-blueprint: elasticsearch-backupblueprint
  name: elasticsearch
  namespace: demo
spec:
  authSecret:
    name: elasticsearch-auth
  init:
    waitForInitialRestore: true
  internalUsers:
    admin:
      backendRoles:
      - admin
      reserved: true
      secretName: elasticsearch-admin-cred
    kibanaro:
      secretName: elasticsearch-kibanaro-cred
    kibanaserver:
      reserved: true
      secretName: elasticsearch-kibanaserver-cred
    logstash:
      secretName: elasticsearch-logstash-cred
    readall:
      secretName: elasticsearch-readall-cred
    snapshotrestore:
      secretName: elasticsearch-snapshotrestore-cred
  monitor:
    agent: prometheus.io/builtin
    prometheus:
      exporter:
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
  storageType: Durable
  topology:
    data:
      replicas: 1
      storage:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: linode-block-storage
    dataCold:
      replicas: 1
      storage:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: linode-block-storage
    dataContent:
      replicas: 1
      storage:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: linode-block-storage
    dataFrozen:
      replicas: 1
      storage:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: linode-block-storage
    dataHot:
      replicas: 1
      storage:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: linode-block-storage
    dataWarm:
      replicas: 1
      storage:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: linode-block-storage
    ingest:
      replicas: 2
      storage:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: linode-block-storage
    master:
      replicas: 3
      storage:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: linode-block-storage
    ml:
      replicas: 1
      storage:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: linode-block-storage
    transform:
      replicas: 1
      storage:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: linode-block-storage
  version: searchguard-7.10.2
---
apiVersion: stash.appscode.com/v1alpha1
kind: Repository
metadata:
  name: elasticsearch-init-repo
  namespace: demo
spec:
  backend:
    gcs:
      bucket: kubedb-testing
      prefix: /elasticsearch
    storageSecretName: gcs-secret
---
apiVersion: stash.appscode.com/v1beta1
kind: BackupBlueprint
metadata:
  name: elasticsearch-backupblueprint
spec:
  backend:
    gcs:
      bucket: stash-testing
      prefix: stash-backup/${TARGET_NAMESPACE}/${TARGET_APP_RESOURCE}/${TARGET_NAME}
    storageSecretName: gcs-secret
  interimVolumeTemplate:
    metadata:
      name: ${TARGET_APP_RESOURCE}-${TARGET_NAME}
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: standard
  retentionPolicy:
    keepLast: 5
    name: keep-last-5
    prune: true
  runtimeSettings:
    container:
      securityContext:
        runAsGroup: 0
        runAsUser: 0
  schedule: '*/5 * * * *'
---
apiVersion: stash.appscode.com/v1beta1
kind: RestoreSession
metadata:
  labels:
    app.kubernetes.io/name: elasticsearches.kubedb.com
  name: elasticsearch-init
  namespace: demo
spec:
  interimVolumeTemplate:
    metadata:
      name: elasticsearch-init-tmp-storage
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: linode-block-storage
  repository:
    name: elasticsearch-init-repo
  rules:
  - snapshots:
    - latest
  runtimeSettings:
    container:
      securityContext:
        runAsGroup: 0
        runAsUser: 0
  target:
    ref:
      apiVersion: appcatalog.appscode.com/v1alpha1
      kind: AppBinding
      name: elasticsearch
