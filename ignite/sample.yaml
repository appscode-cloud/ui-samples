apiVersion: v1
kind: Secret
metadata:
  name: ignite-auth
  namespace: demo
stringData:
  password: thisIs1StrongPassword
  username: root
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: ignite-config
  namespace: demo
stringData:
  ignite.cnf: |
    [mysqld]
    max_connections = 200
    read_buffer_size = 1048576
type: Opaque
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: ignite-ca
  namespace: demo
spec:
  ca:
    secretName: ignite-ca
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/instance: ignite
    app.kubernetes.io/name: ignites.kubedb.com
    release: prometheus-stack
  name: ignite
  namespace: demo
spec:
  endpoints:
    - honorLabels: true
      interval: 30s
      path: /metrics
      port: metrics
  namespaceSelector:
    matchNames:
      - demo
  selector:
    matchLabels:
      app.kubernetes.io/instance: ignite
      app.kubernetes.io/name: ignites.kubedb.com
---
apiVersion: kubedb.com/v1alpha2
kind: Ignite
metadata:
  name: ignite
  namespace: ignite
spec:
  podTemplate:
    spec:
      nodeSelector:
        app: kubedb
        instance: ignite
        component: ignite-database
      tolerations:
        - effect: NoSchedule
          key: app
          operator: Equal
          value: kubedb
        - effect: NoSchedule
          key: instance
          operator: Equal
          value: ignite
        - effect: NoSchedule
          key: component
          operator: Equal
          value: ignite-database
        - effect: NoSchedule
          key: nodepool_type
          operator: Equal
          value: n2-standard-2
      containers:
        - name: ignite
          resources:
            requests:
              cpu: 700m
              memory: "1200Mi"
  version: 3.8.3
  replicas: 3
  storage:
    resources:
      requests:
        storage: "100Mi"
#    storageClassName: standard
    accessModes:
      - ReadWriteOnce
  serviceTemplates:
    - alias: primary
      spec:
        type: LoadBalancer
  deletionPolicy: Halt
---
apiVersion: core.kubestash.com/v1alpha1
kind: BackupConfiguration
metadata:
  name: ignite
  namespace: demo
spec:
  target:
    apiGroup: kubedb.com
    kind: Ignite
    name: ignite
    namespace: demo
  backends:
    - name: ignite-backend
      storageRef:
        name: ignite-storage
        namespace: demo
      retentionPolicy:
        name: ignite-retention-policy
        namespace: demo
  sessions:
    - name: ignite-frequent-backup
      scheduler:
        failedJobsHistoryLimit: 4
        jobTemplate:
          backoffLimit: 2
          template:
            spec:
              containerSecurityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                  - ALL
                runAsGroup: 0
                runAsNonRoot: true
                runAsUser: 70
                seccompProfile:
                  type: RuntimeDefault
              nodeSelector:
                kubernetes.io/os: linux
        schedule: 0 */2 * * *
        successfulJobsHistoryLimit: 2
      sessionHistoryLimit: 3
      repositories:
        - name: ignite-repo
          backend: ignite-backend
          directory: /mongo-repo
          encryptionSecret:
            name: ignite-encryption-secret
            namespace: demo
      addon:
        name: ignite-addon
        tasks:
          - name: logical-backup
        jobTemplate:
          spec:
            containerSecurityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              runAsGroup: 0
              runAsNonRoot: true
              runAsUser: 70
              seccompProfile:
                type: RuntimeDefault
            nodeSelector:
              kubernetes.io/os: linux
---
apiVersion: core.kubestash.com/v1alpha1
kind: BackupBlueprint
metadata:
  name: ignite
  namespace: demo
spec:
  usagePolicy:
    allowedNamespaces:
      from: Same
  backupConfigurationTemplate:
    backends:
      - name: ignite-backend
        storageRef:
          name: ignite-storage
          namespace: demo
        retentionPolicy:
          name: ignite-retention-policy
          namespace: demo
    sessions:
      - name: ignite-frequent-backup
        scheduler:
          failedJobsHistoryLimit: 4
          jobTemplate:
            backoffLimit: 2
            template:
              spec:
                containerSecurityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
                  runAsGroup: 0
                  runAsNonRoot: true
                  runAsUser: 70
                  seccompProfile:
                    type: RuntimeDefault
                nodeSelector:
                  kubernetes.io/os: linux
          schedule: 0 */2 * * *
          successfulJobsHistoryLimit: 2
        sessionHistoryLimit: 3
        repositories:
          - name: ignite-repo
            backend: ignite-backend
            directory: /mongo-repo
            encryptionSecret:
              name: ignite-encryption-secret
              namespace: demo
        addon:
          name: ignite-addon
          tasks:
            - name: logical-backup
          jobTemplate:
            spec:
              containerSecurityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                  - ALL
                runAsGroup: 0
                runAsNonRoot: true
                runAsUser: 70
                seccompProfile:
                  type: RuntimeDefault
              nodeSelector:
                kubernetes.io/os: linux
---
apiVersion: core.kubestash.com/v1alpha1
kind: RestoreSession
metadata:
  name: ignite
  namespace: demo
spec:
  target:
    apiGroup: kubedb.com
    kind: Ignite
    name: ignite
    namespace: demo
  dataSource:
    snapshot: latest
    repository: ignite-repo
    encryptionSecret:
      name: ignite-encryption-secret
      namespace: demo
  addon:
    name: ignite-addon
    tasks:
      - name: logical-backup-restore
    jobTemplate:
      spec:
        nodeSelector:
          kubernetes.io/os: linux
        securityContext:
          runAsUser: 70
          runAsGroup: 0
    containerRuntimeSettings:
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsGroup: 0
        runAsNonRoot: true
        runAsUser: 70
        seccompProfile:
          type: RuntimeDefault
