apiVersion: v1
data:
  init.sql: |-
    USE `mysql`;

    DROP TABLE IF EXISTS
        `kubedb_table`;

    CREATE TABLE `kubedb_table`(
        `id` BIGINT(20) NOT NULL,
        `name` VARCHAR(255) DEFAULT NULL
    );

    --
    -- Dumping data for table `kubedb_table`
    --

    INSERT INTO `kubedb_table`(`id`, `name`)
    VALUES(1, 'name1'),(2, 'name2'),(3, 'name3');

    --
    -- Indexes for table `kubedb_table`
    --

    ALTER TABLE
        `kubedb_table` ADD PRIMARY KEY(`id`);

    --
    -- AUTO_INCREMENT for table `kubedb_table`
    --

    ALTER TABLE
        `kubedb_table` MODIFY `id` BIGINT(20) NOT NULL AUTO_INCREMENT,
        AUTO_INCREMENT = 4;
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: mariadb
    app.kubernetes.io/name: mariadbs.kubedb.com
  name: mariadb-init-script
  namespace: demo
---
apiVersion: cert-manager.io/v1beta1
kind: Issuer
metadata:
  name: mariadb-ca
  namespace: demo
spec:
  ca:
    secretName: mariadb-ca
---
apiVersion: kubedb.com/v1alpha2
kind: MariaDB
metadata:
  name: mariadb
  namespace: demo
spec:
  init:
    script:
      configMap:
        name: mariadb-init-script
  monitor:
    agent: prometheus.io/operator
    prometheus:
      exporter:
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
      serviceMonitor:
        interval: 30s
        labels:
          release: prometheus-stack
  replicas: 1
  requireSSL: true
  storage:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
    storageClassName: standard
  storageType: Durable
  terminationPolicy: WipeOut
  tls:
    certificates:
    - alias: server
      dnsNames:
      - localhost
      ipAddresses:
      - 127.0.0.1
      subject:
        organizations:
        - kubedb:server
    issuerRef:
      apiGroup: cert-manager.io
      kind: Issuer
      name: mariadb-ca
  version: 10.5.8
---
apiVersion: stash.appscode.com/v1alpha1
kind: Repository
metadata:
  labels:
    app.kubernetes.io/instance: mariadb
    app.kubernetes.io/name: mariadbs.kubedb.com
  name: mariadb-repo
  namespace: demo
spec:
  backend:
    gcs:
      bucket: stash-testing
      prefix: /demo/mariadb/mariadb
    storageSecretName: gcs-secret
---
apiVersion: stash.appscode.com/v1beta1
kind: BackupConfiguration
metadata:
  labels:
    app.kubernetes.io/instance: mariadb
    app.kubernetes.io/name: mariadbs.kubedb.com
  name: mariadb
  namespace: demo
spec:
  repository:
    name: mariadb-repo
  retentionPolicy:
    keepLast: 5
    name: keep-last-5
    prune: true
  schedule: '*/5 * * * *'
  target:
    ref:
      apiVersion: appcatalog.appscode.com/v1alpha1
      kind: AppBinding
      name: mariadb
