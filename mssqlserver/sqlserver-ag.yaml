apiVersion: v1
kind: Secret
metadata:
  name: sqlserver-ag-auth
  namespace: demo
stringData:
  password: thisIs1StrongPassword
  username: root
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: sqlserver-ag-config
  namespace: demo
stringData:
  mssqlserver.cnf: |
    [mysqld]
    max_connections = 200
    read_buffer_size = 1048576
type: Opaque
---
apiVersion: kubedb.com/v1alpha2
kind: MSSQLServer
metadata:
  name: sqlserver-ag
  namespace: sample
spec:
  version: "2022-cu12"
  replicas: 3
  topology:
    mode: AvailabilityGroup
    availabilityGroup:
      databases:
        - AgDB1
        - AgDB2
  internalAuth:
    endpointCert:
      issuerRef:
        apiGroup: cert-manager.io
        name: sqlserver-ag-ca
        kind: Issuer
  storageType: Durable
  storage:
    storageClassName: "standard"
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
  deletionPolicy: Delete
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: sqlserver-ag-ca
  namespace: sample
spec:
  ca:
    secretName: mssqlserver-ca
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/instance: mssqlserver
    app.kubernetes.io/name: mssqlservers.kubedb.com
    release: prometheus-stack
  name: sqlserver-ag
  namespace: demo
spec:
  endpoints:
    - honorLabels: true
      interval: 30s
      path: /metrics
      port: metrics
  namespaceSelector:
    matchNames:
      - demo
  selector:
    matchLabels:
      app.kubernetes.io/instance: mssqlserver
      app.kubernetes.io/name: mssqlservers.kubedb.com
---
apiVersion: core.kubestash.com/v1alpha1
kind: BackupConfiguration
metadata:
  name: sqlserver-ag
  namespace: demo
spec:
  target:
    apiGroup: kubedb.com
    kind: MSSQLServer
    name: sqlserver-ag
    namespace: demo
  backends:
    - name: sqlserver-ag-backend
      storageRef:
        name: sqlserver-ag-storage
        namespace: demo
      retentionPolicy:
        name: sqlserver-ag-retention-policy
        namespace: demo
  sessions:
    - name: sqlserver-ag-frequent-backup
      sessionHistoryLimit: 2
      scheduler:
        schedule: "*/5 * * * *"
        jobTemplate:
          backoffLimit: 1
      repositories:
        - name: sqlserver-ag-repo
          backend: sqlserver-ag-backend
          directory: /sqlserver-ag-repo
          encryptionSecret:
            name: sqlserver-ag-encryption-secret
            namespace: demo
      addon:
        name: mssqlserver-addon
        tasks:
          - name: logical-backup
        jobTemplate:
          spec:
            securityContext:
              runAsUser: 0
              runAsGroup: 0
---
apiVersion: core.kubestash.com/v1alpha1
kind: BackupBlueprint
metadata:
  name: sqlserver-ag
  namespace: demo
spec:
  usagePolicy:
    allowedNamespaces:
      from: Same
  backupConfigurationTemplate:
    backends:
      - name: sqlserver-ag-backend
        storageRef:
          name: sqlserver-ag-storage
          namespace: demo
        retentionPolicy:
          name: sqlserver-ag-retention-policy
          namespace: demo
    sessions:
      - name: sqlserver-ag-frequent-backup
        sessionHistoryLimit: 2
        scheduler:
          schedule: "*/5 * * * *"
          jobTemplate:
            backoffLimit: 1
        repositories:
          - name: sqlserver-ag-repo
            backend: sqlserver-ag-backend
            directory: /sqlserver-ag-repo
            encryptionSecret:
              name: sqlserver-ag-encryption-secret
              namespace: demo
        addon:
          name: mssqlserver-addon
          tasks:
            - name: logical-backup
          jobTemplate:
            spec:
              securityContext:
                runAsUser: 0
                runAsGroup: 0
---
apiVersion: core.kubestash.com/v1alpha1
kind: RestoreSession
metadata:
  name: sqlserver-ag
  namespace: demo
spec:
  target:
    apiGroup: kubedb.com
    kind: MSSQLServer
    name: sqlserver-ag
    namespace: demo
  dataSource:
    snapshot: latest
    repository: sqlserver-ag-repo
    encryptionSecret:
      name: sqlserver-ag-encryption-secret
      namespace: demo
  addon:
    name: mssqlserver-addon
    tasks:
      - name: logical-backup-restore
    jobTemplate:
      spec:
        securityContext:
          runAsUser: 0
          runAsGroup: 0
---
apiVersion: autoscaling.kubedb.com/v1alpha1
kind: MSSQLServerAutoscaler
metadata:
  name: sqlserver-ag
  namespace: demo
spec:
  databaseRef:
    name: repl
  opsRequestOptions:
    timeout: 10m
    apply: IfReady
  compute:
    mssqlserver:
      trigger: "On"
      podLifeTimeThreshold: 10m
      resourceDiffPercentage: 20
      minAllowed:
        cpu: 400m
        memory: 400Mi
      maxAllowed:
        cpu: 1
        memory: 2Gi
    nodeTopology:
      name: standard-basv2-family
---
apiVersion: catalog.appscode.com/v1alpha1
kind: MSSQLServerBinding
metadata:
  name: sqlserver-ag
  namespace: demo
spec:
  sourceRef:
    name: sqlserver-ag
    namespace: demo
